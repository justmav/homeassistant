blueprint:
  name: Open cover
  description: Opens all covers depending if cover is closed
  domain: automation
  input:
    cover_open:
      name: Open Cover
      selector:
        entity:
          multiple: true
          filter:
            - domain: cover
#    cover_turn_open:
#      name: Turn Cover open
#      selector:
#        entity:
#          multiple: true
#          filter:
#            - domain: cover
    cover_turn_slightly_open:
      name: Turn Cover slighlty open
      selector:
        entity:
          multiple: true
          filter:
            - domain: cover

variables:
  covers_open_input: !input cover_open
#  covers_turn_open_input: !input cover_turn_open
  covers_turn_slightly_open_input: !input cover_turn_slightly_open

trigger:
  - platform: time
    at: "09:00:00"

action:
  - repeat:
      for_each: '{{ covers_open_input }}'
      sequence:
        - variables:
            entity: "{{ repeat.item }}"
        - condition: template
          value_template: "{{ is_state(entity, 'closed') }}"
        - condition: template
          value_template: "{{ states(entity) != 'closing' }}"
        - condition: template
          value_template: "{{ states(entity) != 'opening' }}"
        - condition: template
          value_template: "{% set n = now() %} {{ n.month > 9 or n.month < 5 }}"
        - service: cover.open_cover
          target:
            entity_id: '{{ entity }}'
  - repeat:
      for_each: '{{ covers_open_input }}'
      sequence:
        - variables:
            entity: "{{ repeat.item }}"
        - condition: template
          value_template: "{{ is_state(entity, 'closed') }}"
        - condition: template
          value_template: "{{ states(entity) != 'closing' }}"
        - condition: template
          value_template: "{{ states(entity) != 'opening' }}"
        - condition: template
          value_template: "{% set n = now() %} {{ n.month > 4 and n.month < 10 }}"
        - service: cover.set_cover_position
          target:
            entity_id: '{{ entity }}'
          data:
            position: 4
#  - repeat:
#      for_each: '{{ covers_turn_open_input }}'
#      sequence:
#        - variables:
#            entity: "{{ repeat.item }}"
#        - condition: template
#          value_template: "{{ is_state(entity, 'closed') }}"
#        - condition: template
#          value_template: "{{ states(entity) != 'closing' }}"
#        - condition: template
#          value_template: "{{ states(entity) != 'opening' }}"
#        - service: cover.set_cover_position
#          target:
#            entity_id: '{{ entity }}'
#          data:
#            position: 4
  - repeat:
      for_each: '{{ covers_turn_slightly_open_input }}'
      sequence:
        - variables:
            entity: "{{ repeat.item }}"
        - condition: template
          value_template: "{{ is_state(entity, 'closed') }}"
        - condition: template
          value_template: "{{ states(entity) != 'closing' }}"
        - condition: template
          value_template: "{{ states(entity) != 'opening' }}"
        - service: cover.set_cover_position
          target:
            entity_id: '{{ entity }}'
          data:
            position: 2